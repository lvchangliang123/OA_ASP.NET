@model IEnumerable<IdentityRole>
@{ViewBag.Title = "角色列表";}
<!--为了检查登录的用户是否满足EditRolePolicy，注入服务-->
@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService authorizationService


<h1>角色列表</h1>
@if (Model.Any())
{
    <a class="btn btn-primary mb-3" style="width:auto" asp-action="CreateRole" asp-controller="Admin">添加新角色</a>
    foreach (var role in Model)
    {
        <div class="card mb-3">
            <div class="card-header">角色Id:@role.Id</div>
            <div class="card-body">
                <h5 class="card-title">@role.Name</h5>
            </div>
            <div class="card-footer">
                <!--检查是否具有编辑策略-->
                @if ((await authorizationService.AuthorizeAsync(User, "EditRolePolicy")).Succeeded)
                {
                    <a asp-controller="Admin" asp-action="EditRole" asp-route-id="@role.Id" class="btn btn-primary">编辑</a>
                }

                <span id="confirmDeleteSpan_@role.Id" style="display:none">
                    <span>确定需要删除吗?</span>
                    <button type="submit" class="btn btn-danger">是</button>
                    <a href="#" class="btn btn-primary" onclick="confirmDelete('@role.Id', false)">否</a>
                </span>
                <span id="deleteSpan_@role.Id">
                    <a href="#" class="btn btn-primary" onclick="confirmDelete('@role.Id', true)">删除</a>
                </span>
            </div>
        </div>
    }
}
else
{
    <div class="card">
        <div class="card-header">尚未创建任何角色</div>
        <div class="card-body">
            <h5 class="card-title">单击下面的按钮创建角色</h5>
        </div>
        <div class="card-footer">
            <a asp-controller="Admin" asp-action="CreateRole" style="width:auto" class="btn btn-primary">创建角色</a>
        </div>
    </div>
}

@section Scripts{ 
<script src="~/js/CustomScript.js" asp-append-version="true"></script>
}
